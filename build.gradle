apply plugin: 'java'
apply plugin: 'application'

sourceCompatibility = '1.8'

mainClassName = 'com.cultivateknowledge.HelloWorldApplication'
version = '0.1.0'

repositories {
    mavenCentral()
}

configurations {
    jolokia
}

dependencies {
    // Core
    compile 'io.dropwizard:dropwizard-core:0.7.0'
    compile 'com.google.guava:guava:17.0'
    compile 'org.slf4j:slf4j-api:1.7.5'

    // REST Client APIs
    compile 'com.netflix.feign:feign-core:6.1.3'
    compile 'com.netflix.feign:feign-jaxrs:6.1.3'
    compile 'com.netflix.feign:feign-jackson:6.1.3'

    // Database
    compile 'io.dropwizard:dropwizard-db:0.7.0'
    compile 'io.dropwizard:dropwizard-jdbi:0.7.0'
    compile 'io.dropwizard:dropwizard-assets:0.7.0'
    compile 'io.dropwizard:dropwizard-views:0.7.0'
    compile 'io.dropwizard:dropwizard-views-mustache:0.7.0'
    runtime 'com.h2database:h2:1.4.178'

    // Dependency Injection
    compile 'com.squareup.dagger:dagger:1.1.0'
    compile 'com.squareup.dagger:dagger-compiler:1.1.0'

    // Monitoring
    runtime "org.jolokia:jolokia-core:1.2.1"
    jolokia "org.jolokia:jolokia-jvm:1.2.1:agent"

    // Testing
    testCompile 'junit:junit:4.11'
    testCompile "org.mockito:mockito-core:1.9.5"
    testCompile "info.cukes:cucumber-java:1.1.6"
    testCompile "info.cukes:cucumber-junit:1.1.6"

}

run {
    systemProperty "com.sun.management.jmxremote", ""
    systemProperty "com.sun.management.jmxremote.port", "9999"
    systemProperty "com.sun.management.jmxremote.authenticate", "false"
    systemProperty "com.sun.management.jmxremote.ssl", "false"
    systemProperty "dropwizard.config", "build/resources/main/appconfig.yml"
    jvmArgs "-javaagent:${configurations.jolokia.iterator().next()}=port=7777,host=localhost"
}

// Fat Jar Creation
task fatJar(type: Jar) {
    dependsOn configurations.runtime
    from sourceSets.main.output
    from(configurations.runtime.resolve().collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
        exclude 'junit'
    }

    manifest {
        attributes("Main-Class": "$mainClassName")
    }

    classifier = 'fatJar'
}

artifacts {
    archives fatJar
}
